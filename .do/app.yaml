name: summit-pdf-api
region: sfo
services:
  - name: web
    git:
      branch: main
      repo_clone_url: ${_REPO_URL}  # Will be replaced by actual repository URL
    build_command: |
      # Install system dependencies and Python packages
      pip install -r requirements.txt
    run_command: gunicorn summit_project.wsgi:application --bind 0.0.0.0:8080 --workers 3 --log-level info --timeout 120
    envs:
      - key: DJANGO_SECRET_KEY
        scope: RUN_TIME
        type: SECRET
      - key: DJANGO_DEBUG
        scope: RUN_TIME
        value: "False"
      - key: PYTHONUNBUFFERED
        scope: RUN_TIME
        value: "1"
      - key: PORT
        scope: RUN_TIME
        value: "8080"
      - key: DJANGO_ALLOWED_HOSTS
        scope: RUN_TIME
        value: "squid-app-nio8c.ondigitalocean.app,.ondigitalocean.app"
      - key: SECURE_SSL_REDIRECT
        scope: RUN_TIME
        value: "True"
      - key: DJANGO_LOG_LEVEL
        scope: RUN_TIME
        value: "INFO"
      - key: OPENAI_API_KEY
        scope: RUN_TIME
        type: SECRET
      - key: PYTHONPATH
        scope: RUN_TIME
        value: "/app"
      # Database configuration
      - key: POSTGRES_DB
        scope: RUN_TIME
        value: "${db.DATABASE}"
      - key: POSTGRES_USER
        scope: RUN_TIME
        value: "${db.USERNAME}"
      - key: POSTGRES_PASSWORD
        scope: RUN_TIME
        value: "${db.PASSWORD}"
      - key: POSTGRES_HOST
        scope: RUN_TIME
        value: "${db.HOSTNAME}"
      - key: POSTGRES_PORT
        scope: RUN_TIME
        value: "${db.PORT}"
    http_port: 8080
    instance_count: 1
    instance_size_slug: professional-xs  # Increased memory for PDF processing
    health_check:
      http_path: /
      initial_delay_seconds: 30
      period_seconds: 15
      timeout_seconds: 10
      success_threshold: 1
      failure_threshold: 3
    routes:
      - path: /
    source_dir: /
    databases:
      - name: db
        engine: PG
        production: true